// Importation des dépendances
import $ from 'jquery';
import 'datatables.net';
import 'datatables.net-bs5';
import 'datatables.net-responsive-bs5';
import 'datatables.net-buttons-bs5';
import 'datatables.net-buttons/js/buttons.html5';
import 'datatables.net-buttons/js/buttons.print';
import 'datatables.net-buttons/js/buttons.colVis';

// Configuration commune pour tous les datatables
const commonConfig = {
    processing: true,
    serverSide: true,
    responsive: true,
    dom: '<"card-header py-3"<"row align-items-center"<"col-sm-12 col-md-6"B><"col-sm-12 col-md-6"f>>><"table-responsive"t><"card-footer"<"row align-items-center"<"col-sm-12 col-md-4"l><"col-sm-12 col-md-4"i><"col-sm-12 col-md-4"p>>>',
    buttons: [
        {
            extend: 'collection',
            text: '<i class="fas fa-download me-1"></i> Exporter',
            className: 'btn-sm btn-primary',
            buttons: [
                {
                    extend: 'copy',
                    text: '<i class="fas fa-copy me-1"></i> Copier',
                    className: 'btn-sm'
                },
                {
                    extend: 'csv',
                    text: '<i class="fas fa-file-csv me-1"></i> CSV',
                    className: 'btn-sm'
                },
                {
                    extend: 'excel',
                    text: '<i class="fas fa-file-excel me-1"></i> Excel',
                    className: 'btn-sm'
                },
                {
                    extend: 'pdf',
                    text: '<i class="fas fa-file-pdf me-1"></i> PDF',
                    className: 'btn-sm'
                },
                {
                    extend: 'print',
                    text: '<i class="fas fa-print me-1"></i> Imprimer',
                    className: 'btn-sm'
                }
            ]
        },
        {
            extend: 'colvis',
            text: '<i class="fas fa-columns me-1"></i> Colonnes',
            className: 'btn-sm btn-secondary'
        },
        {
            text: '<i class="fas fa-sync-alt me-1"></i> Actualiser',
            className: 'btn-sm btn-info',
            action: function (e, dt) {
                dt.ajax.reload();
            }
        }
    ],
    language: {
        "processing": "<div class='spinner-border text-primary' role='status'><span class='visually-hidden'>Chargement...</span></div>",
        "search": "<i class='fas fa-search me-1'></i> Rechercher :",
        "lengthMenu": "Afficher _MENU_ éléments",
        "info": "Affichage de _START_ à _END_ sur _TOTAL_ éléments",
        "infoEmpty": "Aucun élément à afficher",
        "infoFiltered": "(filtré sur _MAX_ éléments au total)",
        "loadingRecords": "Chargement en cours...",
        "zeroRecords": "Aucun élément à afficher",
        "emptyTable": "<div class='text-center p-4'><i class='fas fa-inbox fa-3x text-muted mb-3'></i><br>Aucune donnée disponible</div>",
        "paginate": {
            "first": "<i class='fas fa-angle-double-left'></i>",
            "previous": "<i class='fas fa-angle-left'></i>",
            "next": "<i class='fas fa-angle-right'></i>",
            "last": "<i class='fas fa-angle-double-right'></i>"
        },
        "buttons": {
            "copy": "Copier",
            "print": "Imprimer",
            "excel": "Excel",
            "csv": "CSV",
            "pdf": "PDF",
            "colvis": "Colonnes"
        }
    },
    pageLength: 10,
    lengthMenu: [[5, 10, 25, 50, 100, -1], [5, 10, 25, 50, 100, "Tous"]],
    stateSave: true,
    stateDuration: 60 * 60 * 24 * 7, // 7 jours
    searchDelay: 350, // Délai pour la recherche en temps réel
    ajax: {
        type: 'POST',
        headers: {
            'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').content
        },
        error: function(xhr, error, thrown) {
            console.error('Erreur DataTable:', error);
            // Afficher un message d'erreur convivial
            const errorMessage = xhr.responseJSON?.message || 'Une erreur est survenue lors du chargement des données';
            alert(errorMessage);
        }
    }
};

$(document).ready(function() {
    // Configuration articles
    if ($('#articles-table').length > 0) {
        $('#articles-table').DataTable({
            ...commonConfig,
            ajax: {
                ...commonConfig.ajax,
                url: '/api/articles',
            },
            columns: [
                { 
                    data: 'id',
                    name: 'ID'
                },
                { 
                    data: 'title',
                    name: 'Titre',
                    render: function(data, type, row) {
                        if (type === 'display' && data.length > 50) {
                            return data.substr(0, 47) + '...';
                        }
                        return data;
                    }
                },
                { 
                    data: 'categories',
                    name: 'Catégories',
                    render: function(data) {
                        return Array.isArray(data) ? data.map(cat => cat.name).join(', ') : data;
                    }
                },
                { 
                    data: 'commentsCount',
                    name: 'Commentaires'
                },
                { 
                    data: 'createdAt',
                    name: 'Date',
                    render: function(data) {
                        return new Date(data).toLocaleDateString('fr-FR');
                    }
                },
                { 
                    data: 'actions',
                    name: 'Actions',
                    orderable: false,
                    searchable: false
                }
            ],
            order: [[0, 'desc']]
        });
    }

    // Configuration catégories
    if ($('#categories-table').length > 0) {
        $('#categories-table').DataTable({
            ...commonConfig,
            ajax: {
                ...commonConfig.ajax,
                url: '/api/categories',
            },
            columns: [
                { 
                    data: 'id',
                    name: 'ID'
                },
                { 
                    data: 'name',
                    name: 'Nom'
                },
                { 
                    data: 'description',
                    name: 'Description',
                    render: function(data, type, row) {
                        if (type === 'display' && data.length > 100) {
                            return data.substr(0, 97) + '...';
                        }
                        return data;
                    }
                },
                { 
                    data: 'articlesCount',
                    name: 'Articles'
                },
                { 
                    data: 'updatedAt',
                    name: 'Mise à jour',
                    render: function(data) {
                        return new Date(data).toLocaleDateString('fr-FR');
                    }
                },
                { 
                    data: 'actions',
                    name: 'Actions',
                    orderable: false,
                    searchable: false
                }
            ],
            order: [[1, 'asc']]
        });
    }

    // Configuration commentaires
    if ($('#comments-table').length > 0) {
        $('#comments-table').DataTable({
            ...commonConfig,
            ajax: {
                ...commonConfig.ajax,
                url: '/admin/comment/api/comments',
            },
            columns: [
                { 
                    data: 'id',
                    name: 'ID'
                },
                { 
                    data: 'content',
                    name: 'Contenu',
                    render: function(data, type, row) {
                        if (type === 'display' && data.length > 100) {
                            return data.substr(0, 97) + '...';
                        }
                        return data;
                    }
                },
                { 
                    data: 'article',
                    name: 'Article',
                    render: function(data) {
                        return data.title;
                    }
                },
                { 
                    data: 'author',
                    name: 'Auteur',
                    render: function(data) {
                        return data.email;
                    }
                },
                { 
                    data: 'createdAt',
                    name: 'Date',
                    render: function(data) {
                        return new Date(data).toLocaleDateString('fr-FR');
                    }
                },
                { 
                    data: 'actions',
                    name: 'Actions',
                    orderable: false,
                    searchable: false
                }
            ],
            order: [[4, 'desc']]
        });
    }
});
